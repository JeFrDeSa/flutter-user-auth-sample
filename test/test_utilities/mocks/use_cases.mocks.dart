// Mocks generated by Mockito 5.2.0 from annotations
// in u_auth/test/test_utilities/mocks/use_cases.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:u_auth/core/errors/failures/failures.dart' as _i6;
import 'package:u_auth/core/features/user_profile_authentication/domain/entities/user_profile.dart'
    as _i7;
import 'package:u_auth/core/features/user_profile_authentication/domain/repository_contract/user_profile_repository_contract.dart'
    as _i2;
import 'package:u_auth/core/features/user_profile_authentication/domain/use_cases/login_user_profile.dart'
    as _i8;
import 'package:u_auth/core/features/user_profile_authentication/domain/use_cases/register_user_profile.dart'
    as _i10;
import 'package:u_auth/core/features/user_profile_authentication/domain/use_cases/verify_user_profile.dart'
    as _i4;
import 'package:u_auth/core/utilities/constants.dart' as _i9;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUserProfileRepositoryContract_0 extends _i1.Fake
    implements _i2.UserProfileRepositoryContract {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [VerifyUserProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyUserProfile extends _i1.Mock implements _i4.VerifyUserProfile {
  MockVerifyUserProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserProfileRepositoryContract get userProfileRepositoryContract =>
      (super.noSuchMethod(Invocation.getter(#userProfileRepository),
              returnValue: _FakeUserProfileRepositoryContract_0())
          as _i2.UserProfileRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>> call(
          Map<String, String>? loginCredentials) =>
      (super.noSuchMethod(Invocation.method(#call, [loginCredentials]),
              returnValue:
                  Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>>.value(
                      _FakeEither_1<_i6.MyFailures, _i7.UserProfile>()))
          as _i5.Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>>);
}

/// A class which mocks [LoginUserProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUserProfile extends _i1.Mock implements _i8.LoginUserProfile {
  MockLoginUserProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserProfileRepositoryContract get userProfileRepositoryContract =>
      (super.noSuchMethod(Invocation.getter(#userProfileRepositoryContract),
              returnValue: _FakeUserProfileRepositoryContract_0())
          as _i2.UserProfileRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.MyFailures, _i9.NoParams>> call(
          _i9.NoParams? param) =>
      (super.noSuchMethod(Invocation.method(#call, [param]),
          returnValue: Future<_i3.Either<_i6.MyFailures, _i9.NoParams>>.value(
              _FakeEither_1<_i6.MyFailures, _i9.NoParams>())) as _i5
          .Future<_i3.Either<_i6.MyFailures, _i9.NoParams>>);
}

/// A class which mocks [RegisterUserProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockRegisterUserProfile extends _i1.Mock
    implements _i10.RegisterUserProfile {
  MockRegisterUserProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UserProfileRepositoryContract get userProfileRepositoryContract =>
      (super.noSuchMethod(Invocation.getter(#userProfileRepositoryContract),
              returnValue: _FakeUserProfileRepositoryContract_0())
          as _i2.UserProfileRepositoryContract);
  @override
  _i5.Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>> call(
          Map<String, String>? userCredentials) =>
      (super.noSuchMethod(Invocation.method(#call, [userCredentials]),
              returnValue:
                  Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>>.value(
                      _FakeEither_1<_i6.MyFailures, _i7.UserProfile>()))
          as _i5.Future<_i3.Either<_i6.MyFailures, _i7.UserProfile>>);
}
